name: Create GitHub Release for NuGet Package
on: 
  workflow_call:
    inputs:
      artifact_name:
        description: The name of the nupkg artifact
        type: string
        default: nupkg
      github_packages_url:
        description: The GitHub Packages URL for the package
        type: string
      nuget_org_url:
        description: The NuGet.org URL for the package
        type: string
jobs:
  release:
    name: 'Create GitHub Release'
    if: ${{ github.ref_name == github.event.repository.default_branch && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:

      - name: Download NuGet Package
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
        
      - name: Get Github Packages URL
        if: ${{ inputs.github_packages_url == null }}
        uses: mikaeldui/actions/nupkg/github-packages/version@main
        id: github
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get NuGet.org URL
        if: ${{ inputs.nuget_org_url == null }}
        id: nuget
        uses: mikaeldui/actions/nupkg/nuget.org/url@main

      - name: Get Package Info
        uses: mikaeldui/actions/nupkg/info@main
        id: package_info

      - name: Create tag
        uses: mikaeldui/actions/create-tag@main
        id: tag
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.package_info.outputs.version }}

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "*.nupkg"
          token: ${{ github.token }}
          name: ${{ steps.version.outputs.version }}
          tag: ${{ steps.tag.outputs.tag }}
          body: |
            You can install this specific version from [NuGet.org][nuget.org] or [GitHub Packages][github-packages] using either of these commands:

            Using the **Package Manager Console**:

                PM> Install-Package ${{ steps.package_info.outputs.name }} --Version ${{ steps.package_info.outputs.version }}

            Using the **.NET CLI**:

                dotnet add package ${{ steps.package_info.outputs.name }} --version ${{ steps.package_info.outputs.version }}

            But it's preferable to use **floating versions**, see the [Microsoft Docs](https://docs.microsoft.com/en-us/nuget/concepts/package-versioning#floating-version-resolutions).

            [github-packages]: ${{ inputs.github_packages_url }}${{ steps.github.outputs.html_url }}
            [nuget.org]: ${{ inputs.nuget_org_url }}${{ steps.nuget.outputs.url }}
