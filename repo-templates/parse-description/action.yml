name: 'Parse description with data' 
description: Used with template project
outputs:
  project-name: 
    description: 'The prefix'
    value: ${{ steps.description.outputs.project-name }}
  prefix: 
    description: 'The prefix'
    value: ${{ steps.description.outputs.prefix }}
  namespace: 
    description: 'The prefix'
    value: ${{ steps.description.outputs.namespace }}
  description:
    description: 'The prefix'
    value: ${{ steps.description.outputs.description }}
  tags: 
    description: 'The prefix'
    value: ${{ steps.description.outputs.tags }}
  package: 
    description: 'The prefix'
    value: ${{ steps.description.outputs.package }}

runs:
  using: "composite"
  steps:  
    - name: Get description
      id: description
      uses: actions/github-script@v5
      with:
        script: |
          const query = `query($owner:String!,$name:String!) {
            repository(owner:$owner, name:$name){
              description
            }
          }`
          const variables = {
            owner: context.repo.owner
            name: context.repo.repo
          }
          const result = await github.graphql(query, variables)
          const description = result.repository.description
          const asJson = '{"' + description.replace(/\n/g, '", "').replace(/\: /g, '": "') + '"}';
          const descriptionObj = JSON.parse(description);
          core.setOutput("project-name", description.ProjectName);
          core.setOutput("prefix", description.Prefix);
          core.setOutput("namespace", description.Namespace);
          core.setOutput("description", description.Description);
          core.setOutput("tags", description.Tags);
          core.setOutput("package", description.Package);
