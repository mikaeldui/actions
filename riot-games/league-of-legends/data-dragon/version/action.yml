# uses: mikaeldui/actions/riot-games/league-of-legends/data-dragon/version@main
name: 'Data Dragon Version'
description: 'Get the latest version number of Data Dragon'
outputs:
  version: 
    description: 'The latest version number'
    value: ${{ steps.version.outputs.version }}    

runs:
  using: "composite"
  steps:  
    - name: Get the description
      if: ${{ inputs.description == null }}
      id: version
      uses: actions/github-script@v5
      with:
        result-encoding: string
        script: |       
          var https = require('https');

          var options = {
              host: 'ddragon.leagueoflegends.com',
              path: '/api/versions.json',
              headers: {'User-Agent': 'GitHubActions/main (https://github.com/mikaeldui/actions/tree/main/riot-games/league-of-legends/data-dragon/version)'}
          };

          https.get(options, function (res) {
              var json = '';
              res.on('data', function (chunk) {
                  json += chunk;
              });
              res.on('end', function () {
                  if (res.statusCode === 200) {
                      try {
                          const data = JSON.parse(json);
                          const version = data[0];
                          
                          if (/^\d+\.\d+\.\d+$/.test(version))
                            core.setOutput("version", data[0]);
                          else
                            core.setFailed("The data dragon version wasn't valid!);
                      } catch (e) {
                          core.setFailed('Error parsing JSON!');
                      }
                  } else {
                      core.setFailed('Status: ' + res.statusCode);
                  }
              });
          }).on('error', function (err) {
                core.setFailed(err);
          });
      
